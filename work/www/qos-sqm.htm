<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<meta name="description" content="D7000">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Pragma" content="no-cache">
<meta http-equiv="Cache-Control" content="no-cache">
<meta http-equiv="Expires" content="Mon, 06 Jan 1990 00:00:01 GMT">
<title>NETGEAR Router D7000</title>
<link rel="stylesheet" href="style/form.css">
<style type="text/javascript">
	classes.num.all.fontFamily="Courier";
	classes.num.all.fontSize="10pt";
</style>
<script language="javascript" type="text/javascript" src="string.js"></script>
<script language="javascript" type="text/javascript" src="funcs.js"></script>
<script language="javascript" type="text/javascript" src="utility.js"></script>
<script language="javascript" type="text/javascript" src="linux.js"></script>
<script language="javascript" type="text/javascript">
<!--

function setDefs() {
	var cf=document.forms[0];
	var nvar=[cf.qos_uplink_rate, cf.qos_rate_unit, cf.qos_dwlink_rate, cf.qos_rate_unit_dw];
	var nval=["512", "Kbps", "0", "Kbps"];
	var h_nvar=[cf.h_qos_disc, cf.h_qos_shaper, cf.h_qos_ignore_dscp_egress, cf.h_qos_ignore_dscp_ingress, cf.h_qos_dserv_egress, cf.h_qos_dserv_ingress, cf.h_qos_eecn, cf.h_qos_iecn];
	var hnvar=[cf.qos_disc, cf.qos_shaper, cf.qos_ignore_dscp_egress, cf.qos_ignore_dscp_ingress, cf.qos_dserv_egress, cf.qos_dserv_ingress, cf.qos_eecn, cf.qos_iecn];
	var hnval=["fq_codel", "htb", "0", "1", "diffserv3", "diffserv3", "NOECN", "ECN"];

	if(cf.qos_enable.value=="") cf.qos_enable.checked=false;
	for(var i=0;i<nvar.length;i++) if(nvar[i].value=="") nvar[i].value=nval[i];
		if(cf.h_qos_llayer.value=="") {
		if(cf.h_wan_wanAcType.value=="Ethernet" && cf.h_wifi_ap_mode.value!="1") cf.qos_llayer.value="ethernet";
		else if(cf.h_wan_traffic_type.value=="ptm" || cf.h_wan_traffic_type.value=="atm") cf.qos_llayer.value=cf.h_wan_traffic_type.value;
		else cf.qos_llayer.value="none";
		}
	LLayerDivCheck();
	FcProfCheck();
	if(cf.h_qos_framecompprof.value=="") FcProfSet();
	if(cf.qos_overhead.value=="" || cf.qos_stab_mtu.value=="" || cf.qos_stab_tsize.value=="" || cf.qos_stab_mpu.value=="") LLayerOptCheck();
	for(i=0;i<h_nvar.length;i++) if(h_nvar[i].value=="") hnvar[i].value=hnval[i];
	EcnDivCheck();
}

function FcProfCheck() {
	var cf=document.forms[0];
	var optlen=cf.qos_framecompprof.options.length;
	var frameint=[1, optlen];

	for(var i=1;i<optlen;i++) cf.qos_framecompprof[i].disabled=true;

	if(cf.qos_llayer.value=="ptm") frameint=[1, 3];
	else if(cf.qos_llayer.value=="ethernet") frameint=[3, 5];
	else if(cf.qos_llayer.value=="atm") frameint=[5, optlen];
	for(i=frameint[0];i<frameint[1];i++) cf.qos_framecompprof[i].disabled=false;
}

function FcProfSet() {
	var cf=document.forms[0], frameind;

	if(cf.qos_llayer.value=="ptm") frameind=1;
	else if(cf.qos_llayer.value=="ethernet") frameind=3;
	else if(cf.qos_llayer.value=="atm") frameind=5;
	else frameind=0;
	cf.qos_framecompprof.value=cf.qos_framecompprof[frameind].value;
}

function LLayerOptCheck() {
	var cf=document.forms[0];
	var optlen=cf.qos_framecompprof.options.length;
	var ov=["0", "30", "22", "38", "18", "40", "32", "14", "10", "16", "8", "32", "24", "48"];
	var mp=["0", "64", "64", "84", "64", "0", "0", "0", "0", "0", "0", "0", "0", "0"];

		for(var i=0;i<optlen;i++) {
			if(cf.qos_framecompprof.value==cf.qos_framecompprof[i].value) {
			cf.qos_overhead.value=ov[i];
			cf.qos_stab_mpu.value=mp[i];
			break;
			}
		}
		if(cf.qos_llayer.value=="none" || i==optlen) {
		cf.qos_overhead.value="0";
		cf.qos_stab_mpu.value="0";
		}
	cf.qos_stab_mtu.value="2047";
	if(cf.qos_llayer.value=="atm") cf.qos_stab_tsize.value="128";
	else cf.qos_stab_tsize.value="512";
}

function LLayerDivCheck() {
	var cf=document.forms[0];
	var div_obj, llopt=["fcomp", "fcompval", "llov", "llovval", "llmtu", "llmtuval", "llstab", "llstabval", "llmpu", "llmpuval"];

		for(var i=0;i<llopt.length;i++) {
		div_obj=document.getElementById(llopt[i]);
		((div_obj!=null && cf.qos_llayer.value!="none") ? div_obj.style.display="inline" : div_obj.style.display="none");
		}
}

function EcnDivCheck() {
	var cf=document.forms[0];
	var div_obj, ecnopt=["eecn", "eecnval", "iecn", "iecnval"];

		for(var i=0;i<ecnopt.length;i++) {
		div_obj=document.getElementById(ecnopt[i]);
		((div_obj!=null && cf.qos_disc.value!="sfq") ? div_obj.style.display="inline" : div_obj.style.display="none");
		}
}

function loadCheck() {
	var cf=document.forms[0], ul=1, dl=1, i;
	var nvar=[cf.qos_dserv_egress, cf.qos_dserv_ingress, cf.qos_ignore_dscp_egress, cf.qos_ignore_dscp_ingress, cf.qos_dserv_egress, cf.qos_ignore_dscp_egress, cf.qos_eecn, cf.qos_dserv_ingress, cf.qos_ignore_dscp_ingress, cf.qos_iecn, cf.qos_eecn, cf.qos_iecn];

	for(i=0;i<4;i++) nvar[i].disabled=false;
		if(cf.qos_uplink_rate.value=="0") {
		for(i=4;i<7;i++) nvar[i].disabled=true;
		ul=0;
		}
		if(cf.qos_dwlink_rate.value=="0") {
		for(i=7;i<10;i++) nvar[i].disabled=true;
		dl=0;
		}
		if(cf.qos_disc.value=="fq_codel") {
		if(ul) cf.qos_eecn.disabled=false;
		if(dl) cf.qos_iecn.disabled=false;
		if(cf.qos_shaper.value=="hfsc") cf.qos_shaper.value="htb";
		cf.qos_shaper[1].disabled=true;
		}
		else {
		for(i=10;i<12;i++) nvar[i].disabled=true;
		cf.qos_shaper[1].disabled=false;
		}
		if(cf.qos_shaper.value=="tbf") {
		cf.qos_dserv_egress.value="shaper";
		for(i=1;i<cf.qos_dserv_egress.options.length;i++) cf.qos_dserv_egress[i].disabled=true;
		cf.qos_dserv_ingress.value="shaper";
		for(i=1;i<cf.qos_dserv_ingress.options.length;i++) cf.qos_dserv_ingress[i].disabled=true;
		}
		else {
		if(ul) for(i=1;i<cf.qos_dserv_egress.options.length;i++) cf.qos_dserv_egress[i].disabled=false;
		if(dl) for(i=1;i<cf.qos_dserv_ingress.options.length;i++) cf.qos_dserv_ingress[i].disabled=false;
		}
		if(cf.qos_dserv_egress.value!="diffserv3") {
		cf.qos_ignore_dscp_egress.value="1";
		cf.qos_ignore_dscp_egress[1].disabled=true;
		}
		else if(ul) cf.qos_ignore_dscp_egress[1].disabled=false;
		if(cf.qos_dserv_ingress.value!="diffserv3") {
		cf.qos_ignore_dscp_ingress.value="1";
		cf.qos_ignore_dscp_ingress[1].disabled=true;
		}
		else if(dl) cf.qos_ignore_dscp_ingress[1].disabled=false;
}

function varInit() {

	AncdataToVisible(document.forms[0]);
	setDefs();
	loadCheck();
}

function rateUlChange() {
	var cf=document.forms[0];

	if(cf.qos_uplink_rate.value=="") cf.qos_uplink_rate.value="0";
	else if(cf.qos_rate_unit.value=="Mbps") cf.qos_uplink_rate.value=Math.floor(parseInt(cf.qos_uplink_rate.value)/1000);
	else cf.qos_uplink_rate.value=Math.floor(parseInt(cf.qos_uplink_rate.value)*1000);
}

function rateDlChange() {
	var cf=document.forms[0];

	if(cf.qos_dwlink_rate.value=="") cf.qos_dwlink_rate.value="0";
	else if(cf.qos_rate_unit_dw.value=="Mbps") cf.qos_dwlink_rate.value=Math.floor(parseInt(cf.qos_dwlink_rate.value)/1000);
	else cf.qos_dwlink_rate.value=Math.floor(parseInt(cf.qos_dwlink_rate.value)*1000);
}

function smtuChange() {
	var cf=document.forms[0];

		if(cf.qos_llayer.value=="atm") {
		var tsize=(parseInt(cf.qos_stab_mtu.value)+1)/16;
		if(parseInt(tsize)==tsize) cf.qos_stab_tsize.value=tsize;
		else alert("Size Table MTU value returns non integer Required Table Size value !");
		}
}

function stabChange() {
	var cf=document.forms[0];

	if(cf.qos_llayer.value=="atm") cf.qos_stab_mtu.value=parseInt(cf.qos_stab_tsize.value)*16-1;
}

function checkData() {
	var cf=document.forms[0], msg="", lim;

	if(cf.qos_rate_unit.value=="Mbps") lim=9999;
	else lim=999999;
	if(cf.qos_uplink_rate.value.length>1 && cf.qos_uplink_rate.value[0]=='0') msg+="Invalid Uplink bandwidth value";
	else msg+=checkInt(cf.qos_uplink_rate, "Uplink bandwidth", 0, lim, true);
	if(cf.qos_rate_unit_dw.value=="Mbps") lim=9999;
	else lim=999999;
	if(cf.qos_dwlink_rate.value.length>1 && cf.qos_dwlink_rate.value[0]=='0') msg+="Invalid Downlink bandwidth value";
	else msg+=checkInt(cf.qos_dwlink_rate, "Downlink bandwidth", 0, lim, true);
		if(cf.qos_llayer.value!="none") {
			if(cf.qos_overhead.value[0]=='-') {
			var absovh=Math.abs(cf.qos_overhead.value);
			if(isNaN(absovh) || absovh>64) msg+="Overhead is out of range: -64 ~ 256";
			}
			else msg+=checkInt(cf.qos_overhead, "Overhead", -64, 256, true);
		if(parseInt(cf.qos_stab_mtu.value)<(parseInt(cf.h_wan_mtu.value)+parseInt(cf.qos_overhead.value))) 
		msg+="Size Table MTU must be greater/equal than ( wan MTU ("+cf.h_wan_mtu.value+") + overhead ("+cf.qos_overhead.value+") ) on the selected link layer\n";
		else msg+=checkInt(cf.qos_stab_mtu, "Size Table MTU", parseInt(cf.h_wan_mtu.value)+parseInt(cf.qos_overhead.value), 9999, true);
		if(cf.qos_llayer.value=="atm" && cf.qos_stab_tsize.value!=((parseInt(cf.qos_stab_mtu.value)+1)/16)) 
		msg+="Required Table Size must be: (Size Table MTU + 1) / 16 on the selected link layer\n";
		else msg+=checkInt(cf.qos_stab_tsize, "Required Table Size", 0, 9999, true);
		if((cf.qos_llayer.value=="ptm" || cf.qos_llayer.value=="ethernet") && cf.qos_stab_mpu.value=="0") 
		msg+="Size Table MPU must be greater than 0 on the selected link layer\n";
		else msg+=checkInt(cf.qos_stab_mpu, "Size Table MPU", 0, 256, true);
		}
		if(cf.qos_script.value!="") {
		if(cf.qos_script.value.indexOf(".sqm")<0) msg+="Invalid qos script name: it must have \".sqm\" extension\n";
		if(!checkInvalidChars(cf.qos_script.value, invalid_folder_char)) msg+="Invalid qos script name: characters not allowed\n";
		}

	if(msg.length>1) {
	alert(msg);
	return false;
	}
	AncdataToHidden(cf);
	return true;
}

function checkPerscript() {
	var cf=document.forms['perscript'];
	var filename="";
	var destdir="/tmp/";
	var a;
	var IEPlfm = /MSIE [67]/g;
	var diskprefix = /^.:\\/g;

		if(typeof cf.download.files[0]!='undefined') filename=cf.download.files[0].name;
		else {
		alert(getErrorMsgByVar("gsm_msg_bku_no_blank_filename"));
		return false;
		}
		if(IEPlfm.test(navigator.userAgent) && !diskprefix.test(filename)) {
		alert(getErrorMsgByVar("gsm_msg_upg_inv_file_type")+"sqm");
		return false;
		}
	if(filename.split) a=filename.split(".");
	else a=cdisplit(filename,".");
		if((a.length<2) || (a[0]=="") || (a[a.length-1].toLowerCase()!="sqm")) {
		alert(getErrorMsgByVar("gsm_msg_upg_inv_file_type")+"sqm");
		return false;
		}

	if(!confirm("Installing personal qos script "+filename+" : proceed ?")) return false;
	cf.todo.value="/usr/sbin/mv -f "+destdir+filename+" /usr/sbin/scripts/; /usr/sbin/nvram set qos_script="+filename+" >/dev/null 2>&1";
	return true;
}

//-->
</script></head>
<body bgcolor="#ffffff" leftmargin="0" marginwidth="0" topmargin="0" marginheight="0" onload="varInit();document.forms[0].elements[0].focus();">
<form name="qossqm" method="POST" action="anc.cgi" onSubmit="buttonToDisabled(document.forms[0])">
<div><a class="page_title" href="javascript:gotoWiki('qos-sqm-package/');">QOS SQM</a></div>
<div class="fix_button">
<table border="0" cellpadding="0" cellspacing="2" width="100%"><tr><td nowrap colspan="2" align="center">
<input class="cancel_bt" type="reset" name="cancel" value="Cancel" onClick="setTimeout('varInit()',250)">
&nbsp;
<input class="common_bt" type="submit" name="resetqos" value="Reset" onClick="this.form.job.value='home';this.form.todo.value='/usr/sbin/rc_app/rc_qos reset';if(!confirm('Qos sqm settings are about to be unset: proceed ?')) return false;else return true">
&nbsp;
<input class="common_bt" type="button" name="details" value="Details" onClick="this.form.pipe_cmd.value='/usr/sbin/rc_app/rc_qos details';AncstdAction(this.form,'anc_run.htm','qos-sqm.htm','pipe','');">
&nbsp;
<input class="common_bt" type="button" name="stats" value="Stats" onClick="this.form.pipe_cmd.value='/usr/sbin/rc_app/rc_qos stats';AncstdAction(this.form,'anc_run.htm','qos-sqm.htm','pipe','');">
&nbsp;
<input class="apply_bt" type="submit" name="apply" value="Apply" onClick="return checkData()">
</td></tr></table>
</div>
<div id="main" class="main_top_button">
<table border="0" cellpadding="0" cellspacing="3" width="100%">
<tr><td nowrap colspan="2"><input type="checkbox" name="qos_enable" value="@h_qos_enable#"><a href="javascript:gotoWiki('qos-sqm-package#qos_enable');"><b>Turn QOS Service On</b></a></td></tr>
<tr><td colspan="2" background="liteblue.gif" height="12"></td></tr>
<tr><td nowrap><a href="javascript:gotoWiki('qos-sqm-package#qos_uplink_rate');"><b>Uplink Bandwidth</b></a></td>
<td nowrap align="right"><input type="text" class="num" name="qos_uplink_rate" value="@qos_uplink_rate#" onChange="loadCheck()" size=6 maxlength=6>
&nbsp;	<select name="qos_rate_unit" onChange="rateUlChange()" size=1>
		<option value="Kbps">Kbps</option>
		<option value="Mbps">Mbps</option>
	</select>
</td></tr>
<tr><td nowrap><a href="javascript:gotoWiki('qos-sqm-package#qos_dwlink_rate');"><b>Downlink Bandwidth</b></a></td>
<td nowrap align="right"><input type="text" class="num" name="qos_dwlink_rate" value="@qos_dwlink_rate#" onChange="loadCheck()" size=6 maxlength=6>
&nbsp;	<select name="qos_rate_unit_dw" onChange="rateDlChange()" size=1>
		<option value="Kbps">Kbps</option>
		<option value="Mbps">Mbps</option>
	</select>
</td></tr>
<tr><td colspan="2" background="liteblue.gif" height="12"></td></tr>
<tr><td align="left"><span><a href="javascript:gotoWiki('qos-sqm-package#qos_llayer');"><b>Link Layer Adaptation</b></a></span></td>
	<td align="right"><select name="qos_llayer" onChange="LLayerDivCheck();FcProfCheck();FcProfSet();LLayerOptCheck();" size=1>
		<option value="ptm">VDSL (ptm)</option>
		<option value="ethernet">True Ethernet (ethernet)</option>
		<option value="atm">ADSL (atm)</option>
		<option value="none">Other (none) (DEF)</option>
	</select>
</td></tr>
<tr><td align="left"><div id="fcomp"><span><a href="javascript:gotoWiki('qos-sqm-package#qos_framecompprof');"><b>Frame Compensation Profile</b></a></span></div></td>
	<td align="right"><div id="fcompval"><select name="qos_framecompprof" onChange="LLayerOptCheck()" size=1>
		<option value="own">Personal</option>
		<option value="pppoe-ptm">VDSL PPPOE</option>
		<option value="bridged-ptm">VDSL BRIDGED</option>
		<option value="link-ethernet">Ethernet Link</option>
		<option value="cable-ethernet">Cable Link</option>
		<option value="pppoe-llc-atm">ADSL PPPOE-LLC</option>
		<option value="pppoe-vc-atm">ADSL PPPOE-VC</option>
		<option value="pppoa-llc-atm">ADSL PPPOA-LLC</option>
		<option value="pppoa-vc-atm">ADSL PPPOA-VC</option>
		<option value="ipoa-llc-atm">ADSL IPOA-LLC</option>
		<option value="ipoa-vc-atm">ADSL IPOA-VC</option>
		<option value="bridged-llc-atm">ADSL BRIDGED-LLC</option>
		<option value="bridged-vc-atm">ADSL BRIDGED-VC</option>
		<option value="conservative-atm">ADSL Conservative</option>
	</select>
</div></td></tr>
<tr><td nowrap><div id="llov"><a href="javascript:gotoWiki('qos-sqm-package#qos_overhead');"><b>Per-Packet Overhead</b></a></div></td>
<td nowrap align="right"><div id="llovval"><input type="text" class="num" name="qos_overhead" value="@qos_overhead#"  onChange="qos_framecompprof.value=qos_framecompprof[0].value;" size=5 maxlength=5>
&nbsp; Bytes</div></td></tr>
<tr><td nowrap><div id="llmtu"><a href="javascript:gotoWiki('qos-sqm-package#qos_stab_mtu');"><b>Size Table MTU</b></a></div></td>
<td nowrap align="right"><div id="llmtuval"><input type="text" class="num" name="qos_stab_mtu" value="@qos_stab_mtu#" onChange="smtuChange();qos_framecompprof.value=qos_framecompprof[0].value;" size=5 maxlength=5>
&nbsp; Bytes</div></td></tr>
<tr><td nowrap><div id="llstab"><a href="javascript:gotoWiki('qos-sqm-package#qos_stab_tsize');"><b>Required Table Size</b></a></div></td>
<td nowrap align="right"><div id="llstabval"><input type="text" class="num" name="qos_stab_tsize" value="@qos_stab_tsize#" onChange="stabChange();qos_framecompprof.value=qos_framecompprof[0].value;" size=5 maxlength=5>
&nbsp;&nbsp; Slots</div></td></tr>
<tr><td nowrap><div id="llmpu"><a href="javascript:gotoWiki('qos-sqm-package#qos_stab_mpu');"><b>Size Table MPU</b></a></div></td>
<td nowrap align="right"><div id="llmpuval"><input type="text" class="num" name="qos_stab_mpu" value="@qos_stab_mpu#"  onChange="smtuChange();qos_framecompprof.value=qos_framecompprof[0].value;" size=5 maxlength=5>
&nbsp; Bytes</div></td></tr>
<tr><td colspan="2" background="liteblue.gif" height="12"></td></tr>
<tr><td align="left"><span><a href="javascript:gotoWiki('qos-sqm-package#qos_disc');"><b>Disc Algorithm</b></a></span></td>
	<td align="right"><select name="qos_disc" onChange="loadCheck();EcnDivCheck();" size=1>
		<option value="fq_codel">Fq_Codel (DEF)</option>
		<option value="sfq">Sfq</option>
	</select>
</td></tr>
<tr><td align="left"><span><a href="javascript:gotoWiki('qos-sqm-package#qos_shaper');"><b>Shaper Algorithm</b></a></span></td>
	<td align="right"><select name="qos_shaper" onChange="loadCheck()" size=1>
		<option value="htb">Htb (DEF)</option>
		<option value="hfsc">Hfsc</option>
		<option value="tbf">Tbf</option>
	</select>
</td></tr>
<tr><td colspan="2" background="liteblue.gif" height="12"></td></tr>
<tr><td align="left"><span><a href="javascript:gotoWiki('qos-sqm-package#qos_dserv_egress');"><b>Uplink Prioritization Scheme</b></a></span></td>
	<td align="right"><select name="qos_dserv_egress" onChange="loadCheck()" size=1>
			<option value="shaper">Shaper Only</option>
			<option value="classful">Classful</option>
			<option value="diffserv3">Diffserv (DEF)</option>
	</select>
</td></tr>
<tr><td align="left"><span><a href="javascript:gotoWiki('qos-sqm-package#qos_dserv_ingress');"><b>Downlink Prioritization Scheme</b></a></span></td>
	<td align="right"><select name="qos_dserv_ingress" onChange="loadCheck()" size=1>
			<option value="shaper">Shaper Only</option>
			<option value="classful">Classful</option>
			<option value="diffserv3">Diffserv (DEF)</option>
	</select>
</td></tr>
<tr><td align="left"><span><a href="javascript:gotoWiki('qos-sqm-package#qos_ignore_dscp_egress');"><b>DSCP Uplink Filtering Classification</b></a></span></td>
	<td align="right"><select name="qos_ignore_dscp_egress" size=1>
			<option value="1">Undifferentiated Priority</option>
			<option value="0">N-Tier Priority (DEF)</option>
	</select>
</td></tr>
<tr><td align="left"><span><a href="javascript:gotoWiki('qos-sqm-package#qos_ignore_dscp_ingress');"><b>DSCP Downlink Filtering Classification</b></a></span></td>
	<td align="right"><select name="qos_ignore_dscp_ingress" size=1>
			<option value="1">Undifferentiated Priority (DEF)</option>
			<option value="0">N-Tier Priority</option>
	</select>
</td></tr>
<tr><td align="left"><div id="eecn"><span><a href="javascript:gotoWiki('qos-sqm-package#qos_eecn');"><b>Uplink Explicit Congestion Notification</b></a></span></div></td>
	<td align="right"><div id="eecnval"><select name="qos_eecn" onChange="if(this.value=='ECN' && this.form.qos_rate_unit.value=='Kbps' && this.form.qos_uplink_rate.value<1000) alert('Warning ! Uplink bandwidth too low for ECN !\n')" size=1>
			<option value="ECN">ECN On</option>
			<option value="NOECN">ECN Off (DEF)</option>
	</select>
</div></td></tr>
<tr><td align="left"><div id="iecn"><span><a href="javascript:gotoWiki('qos-sqm-package#qos_iecn');"><b>Downlink Explicit Congestion Notification</b></a></span></div></td>
	<td align="right"><div id="iecnval"><select name="qos_iecn" size=1>
			<option value="ECN">ECN On (DEF)</option>
			<option value="NOECN">ECN Off</option>
	</select>
</div></td></tr>
<tr><td colspan="2" background="liteblue.gif" height="12"></td></tr>
<tr><td nowrap><a href="javascript:gotoWiki('qos-sqm-package#qos_script');" tabindex="-1"><b>Personal QOS Script Name</b></a></td><td nowrap align="right"><input type="text" class="text" name="qos_script" value="@qos_script#" size="20" maxlength="128"></td></tr>
<tr><td colspan="2" background="liteblue.gif" height="12"></td></tr>
</table>
<input type="hidden" name="job" value="save">
<input type="hidden" name="todo" value="/usr/sbin/rc qos start">
<input type="hidden" name="next_file" value="qos-sqm.htm">
<input type="hidden" name="old_file" value="">
<input type="hidden" name="pipe_cmd" value="">
<input type="hidden" name="err_msg" value="Error occurred !\n\n">
<input type="hidden" name="h_qos_enable" value="@h_qos_enable#">
<input type="hidden" name="h_qos_rate_unit" value="@h_qos_rate_unit#">
<input type="hidden" name="h_qos_rate_unit_dw" value="@h_qos_rate_unit_dw#">
<input type="hidden" name="h_qos_llayer" value="@h_qos_llayer#">
<input type="hidden" name="h_qos_framecompprof" value="@h_qos_framecompprof#">
<input type="hidden" name="h_qos_disc" value="@h_qos_disc#">
<input type="hidden" name="h_qos_shaper" value="@h_qos_shaper#">
<input type="hidden" name="h_qos_dserv_egress" value="@h_qos_dserv_egress#">
<input type="hidden" name="h_qos_dserv_ingress" value="@h_qos_dserv_ingress#">
<input type="hidden" name="h_qos_ignore_dscp_egress" value="@h_qos_ignore_dscp_egress#">
<input type="hidden" name="h_qos_ignore_dscp_ingress" value="@h_qos_ignore_dscp_ingress#">
<input type="hidden" name="h_qos_eecn" value="@h_qos_eecn#">
<input type="hidden" name="h_qos_iecn" value="@h_qos_iecn#">
<input type="hidden" name="h_wan_traffic_type" value="@h_wan_traffic_type#">
<input type="hidden" name="h_wan_wanAcType" value="@h_wan_wanAcType#">
<input type="hidden" name="h_wifi_ap_mode" value="@h_wifi_ap_mode#">
<input type="hidden" name="h_wan_mtu" value="@h_wan_mtu#">
</form>
<form name="perscript" method="POST" action="anc.cgi" enctype="multipart/form-data" onSubmit="buttonToDisabled(document.forms[0])">
<table border="0" cellpadding="0" cellspacing="3" width="100%">
<tr><td colspan="2" align="center"><a href="javascript:gotoWiki('qos-sqm-package#qos_script')" tabindex="-1"><b>Install a Personal QOS Script</b></a></td></tr>
<tr><td colspan="2" align="center"><input type="FILE" name="download" size="40" maxlength="128" value=""></td></tr>
<tr><td colspan="2" align="center"><input class="apply_bt" type="submit" name="install" value="Install" onClick="return checkPerscript();"></td></tr>
<tr><td colspan="2" background="liteblue.gif" height="12"></td></tr></table>
<input type="hidden" name="job" value="home">
<input type="hidden" name="todo" value="">
<input type="hidden" name="next_file" value="qos-sqm.htm">
<input type="hidden" name="err_msg" value="Error occurred !\n\n">
</form></div>
<script>printHelp()</script>
</body></html>
