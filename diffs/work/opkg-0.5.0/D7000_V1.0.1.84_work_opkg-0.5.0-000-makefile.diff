diff -urN work/opkg-0.5.0/Makefile work/opkg-0.5.0/Makefile
--- work/opkg-0.5.0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ work/opkg-0.5.0/Makefile	2017-03-23 20:35:42.745736890 +0100
@@ -0,0 +1,159 @@
+include ../Rules.mak
+
+ifdef DEBUG
+PREFIX_STATE_DIR 	:= $(TMPDIR)
+else
+PREFIX_STATE_DIR 	:= /usr
+endif
+
+OPKG_REP_NAME		:= $(PROJECT_NAME)-$(ARCH)-$(PROJECT_TARGET)
+OPKG_CONF_PATH		:= $(OPKG)/utils
+OPKG_CONF_NAME		:= opkg.conf
+OPKG_CONF 		:= $(OPKG_CONF_PATH)/$(OPKG_CONF_NAME)
+OPKG_TMPDIR		:= $(TMPDIR)/opkg
+OPKGLANGPART		:= /config/language_TUR
+OPKGPART		:= mtd20
+WEB			:= ../www/opkg.htm ../www/opkg_select.htm
+
+MANPAGES = opkg.1 opkg.conf.5
+
+all: config
+	$(MAKE) -C $(OPKG)
+
+config:
+	@if [ ! -f h_config ]; then \
+	$(MAKE) configure || exit 1; \
+	touch h_config; \
+	fi
+
+ifdef LOCAL
+configure: configure-local
+install: install-local
+opkg_conf: opkg_conf-local
+else
+configure: configure-cross
+install: install-cross
+opkg_conf: opkg_conf-cross
+endif
+
+configure-local:
+	cd $(OPKG) && ACLOCAL_FLAGS="-I /usr/share/aclocal" ./autogen.sh && ./configure --build=$(BUILD_HOST) LIBARCHIVE_LIBS="-L$(WORK_DIR)/$(ARCHIVE)/$(ARCHIVE)/.libs -larchive" LDFLAGS="-L$(WORK_DIR)/$(ARCHIVE)/$(ARCHIVE)/.libs" LIBS="-larchive" CPPFLAGS="-I$(WORK_DIR)/$(ARCHIVE)/$(ARCHIVE)/libarchive" --disable-gpg --disable-shared --with-static-libopkg --prefix=$(PREFIX_STATE_DIR) --localstatedir=$(PREFIX_STATE_DIR)
+
+configure-cross:
+	cd $(OPKG) && ACLOCAL_FLAGS="-I /usr/share/aclocal" ./autogen.sh && ./configure --build=$(BUILD_HOST) --host=$(TARGET_NAME) OPENSSL_LIBS="-L$(WORK_DIR)/$(OPENSSL)/$(OPENSSL) -lssl -lcrypto" CURL_LIBS="-L$(WORK_DIR)/$(CURL)/$(CURL)/lib/.libs -lcurl" LIBARCHIVE_LIBS="-L$(WORK_DIR)/$(ARCHIVE)/$(ARCHIVE)/.libs -larchive" LDFLAGS="-L$(WORK_DIR)/$(OPENSSL)/$(OPENSSL) -L$(WORK_DIR)/$(CURL)/$(CURL)/lib/.libs -L$(WORK_DIR)/$(ARCHIVE)/$(ARCHIVE)/.libs -L$(WORK_DIR)/$(ZLIB)/$(ZLIB)" LIBS="-lssl -lcrypto -lcurl -larchive -lz" CFLAGS="$(CFLAGS) -Os -s" CPPFLAGS="-I$(WORK_DIR)/$(OPENSSL)/$(OPENSSL)/include -I$(WORK_DIR)/$(CURL)/$(CURL)/include -I$(WORK_DIR)/$(ARCHIVE)/$(ARCHIVE)/libarchive -I$(WORK_DIR)/$(ZLIB)/$(ZLIB)" --disable-gpg --disable-shared --with-static-libopkg --enable-curl --enable-ssl-curl --prefix=$(PREFIX_STATE_DIR) --localstatedir=$(PREFIX_STATE_DIR)
+
+static: distclean
+	rm -f $(WORK_DIR)/$(OPENSSL)/$(OPENSSL)/libcrypto.so* $(WORK_DIR)/$(OPENSSL)/$(OPENSSL)/libssl.so* $(WORK_DIR)/$(ARES)/$(ARES)/src/lib/.libs/libcares.so* $(WORK_DIR)/$(CURL)/$(CURL)/lib/.libs/libcurl.so* $(WORK_DIR)/$(ARCHIVE)/$(ARCHIVE)/.libs/libarchive.so* $(WORK_DIR)/$(ZLIB)/$(ZLIB)/libz.so* && cd ../$(CURL) && $(MAKE) static && cd ../$(OPKG)/$(OPKG) && ACLOCAL_FLAGS="-I /usr/share/aclocal" ./autogen.sh && ./configure --build=$(BUILD_HOST) --host=$(TARGET_NAME) OPENSSL_LIBS="-Bstatic -L$(WORK_DIR)/$(OPENSSL)/$(OPENSSL) -Wl,-Bstatic -lssl -Wl,-Bstatic -lcrypto" CURL_LIBS="-Bstatic -L$(WORK_DIR)/$(CURL)/$(CURL)/lib/.libs -Wl,-Bstatic -lcurl" LIBARCHIVE_LIBS="-Bstatic -L$(WORK_DIR)/$(ARCHIVE)/$(ARCHIVE)/.libs -Wl,-Bstatic -larchive" LDFLAGS="-Bstatic -L$(WORK_DIR)/$(OPENSSL)/$(OPENSSL) -Bstatic -L$(WORK_DIR)/$(CURL)/$(CURL)/lib/.libs -Bstatic -L$(WORK_DIR)/$(ARCHIVE)/$(ARCHIVE)/.libs -Bstatic -L$(WORK_DIR)/$(ZLIB)/$(ZLIB) -Bdynamic" LIBS="-Wl,-Bstatic -lssl -Wl,-Bstatic -lcrypto -Wl,-Bstatic -lcurl -Wl,-Bstatic -larchive -Wl,-Bstatic -lz -Wl,-Bstatic -ldl -Wl,-Bdynamic" CFLAGS="$(CFLAGS) -Os -static" CPPFLAGS="-I$(WORK_DIR)/$(OPENSSL)/$(OPENSSL)/include -I$(WORK_DIR)/$(CURL)/$(CURL)/include -I$(WORK_DIR)/$(ARCHIVE)/$(ARCHIVE)/libarchive -I$(WORK_DIR)/$(ZLIB)/$(ZLIB)" --disable-gpg --disable-shared --with-static-libopkg --prefix=$(PREFIX_STATE_DIR) --localstatedir=$(PREFIX_STATE_DIR) && cd .. && $(MAKE) -C $(OPKG) && $(SSTRIP) $(OPKG)/src/opkg
+
+install-local: opkg_conf-local
+	install -m 0755 -d $(GIT_ROOT_DIR)/$(LBIN_DIR)
+	install -m 0644 $(OPKG_CONF) $(GIT_ROOT_DIR)/$(LBIN_DIR)
+	install -m 0755 $(OPKG)/src/opkg $(GIT_ROOT_DIR)/$(LBIN_DIR)
+
+install-cross: opkg_conf control
+	$(SSTRIP) $(OPKG)/src/opkg
+	for D in $(ETCDIR) $(BINDIR) $(WWWDIR); do install -m 0755 -d $$D; done
+	install -m 0644 $(OPKG_CONF) $(ETCDIR)
+	install -m 0755 $(OPKG)/src/opkg $(BINDIR)
+	install -m 0664 $(WEB) $(WWWDIR)
+	ln -sf $(OPKG_INFO_STATUS_DIR)/status $(WWWDIR)/opkgstatus
+	ln -sf $(OPKG_TMPDIR)/lists/$(OPKG_REP_NAME) $(WWWDIR)/opkglist
+	ln -sf $(OPKG_TMPDIR)/list-upgradable $(WWWDIR)/opkglistupgr
+
+man-install:
+	@cd $(OPKG)/man && $(MAKE) && for M in $(MANPAGES); do gzip $$M; sudo mv $${M}.gz /usr/share/man/man$${M##*.}/; done
+
+clean:
+	$(MAKE) -C $(OPKG) clean
+
+distclean:
+	@rm -f h_config
+	$(MAKE) -C $(OPKG) distclean
+
+opkg_conf-local:
+	@echo "src/gz local file://$(GIT_ROOT_DIR)/$(OPKG_PKG_DIR)" > $(OPKG_CONF)
+	@echo "arch $(CPU_LCARCH)$(PROJECT_TARGET) 1" >> $(OPKG_CONF)
+	@echo "arch $(CPU_LCARCH) 6" >> $(OPKG_CONF)
+	@echo "arch all 11" >> $(OPKG_CONF)
+	@echo "arch any 16" >> $(OPKG_CONF)
+	@echo "arch noarch 21" >> $(OPKG_CONF)
+	@echo "dest root /" >> $(OPKG_CONF)
+	@echo "dest ram /tmp" >> $(OPKG_CONF)
+	@echo "option autoremove 1" >> $(OPKG_CONF)
+	@echo "option offline_root $(SOURCE_PATH)/$(SRC_TARGET_REL_DIR)" >> $(OPKG_CONF)
+	@echo "option tmp_dir /tmp" >> $(OPKG_CONF)
+	@echo "option lock_file /tmp/opkg/run" >> $(OPKG_CONF)
+	@echo "option cache_dir /tmp/opkg/cache" >> $(OPKG_CONF)
+	@echo "option lists_dir /tmp/opkg/lists" >> $(OPKG_CONF)
+	@echo "" >> $(OPKG_CONF)
+
+opkg_conf-cross:
+ifdef DEBUG
+	@echo "#src/gz $(OPKG_REP_NAME) $(PROJECT_REP_ROOT)/$(OPKG_REP_NAME)" > $(OPKG_CONF)
+	@echo "src/gz debug $(PROJECT_REP_ROOT)/debug" >> $(OPKG_CONF)
+else
+	@echo "src/gz $(OPKG_REP_NAME) $(PROJECT_REP_ROOT)/$(OPKG_REP_NAME)" > $(OPKG_CONF)
+	@echo "#src/gz debug $(PROJECT_REP_ROOT)/debug" >> $(OPKG_CONF)
+endif
+	@echo "#src/gz local file:///mnt/shares/U/local" >> $(OPKG_CONF)
+	@echo "#src/gz localdebug $(LOCAL_REP_ROOT)/localdebug" >> $(OPKG_CONF)
+	@echo "arch $(ARCH)$(PROJECT_TARGET) 1" >> $(OPKG_CONF)
+	@echo "arch $(ARCH) 6" >> $(OPKG_CONF)
+	@echo "arch all 11" >> $(OPKG_CONF)
+	@echo "arch any 16" >> $(OPKG_CONF)
+	@echo "arch noarch 21" >> $(OPKG_CONF)
+	@echo "dest root /" >> $(OPKG_CONF)
+	@echo "dest ram $(TMPDIR)" >> $(OPKG_CONF)
+	@echo "option autoremove 1" >> $(OPKG_CONF)
+	@echo "option tmp_dir $(TMPDIR)" >> $(OPKG_CONF)
+	@echo "option lock_file $(TMPDIR)/opkg/run" >> $(OPKG_CONF)
+	@echo "option cache_dir $(TMPDIR)/opkg/cache" >> $(OPKG_CONF)
+	@echo "option lists_dir $(TMPDIR)/opkg/lists" >> $(OPKG_CONF)
+	@echo "option connect_timeout_ms 5000" >> $(OPKG_CONF)
+	@echo "option transfer_timeout_ms 60000" >> $(OPKG_CONF)
+	@echo "" >> $(OPKG_CONF)
+
+ifndef BUILD
+control:
+else
+CONFFILES		:= $(CTRL_DIR)/conffiles
+PREINST			:= $(CTRL_DIR)/preinst
+POSTINST		:= $(CTRL_DIR)/postinst
+
+control: conffiles preinst postinst
+
+conffiles:
+	@echo "$(USRETC)/$(OPKG_CONF_NAME)" > $(CONFFILES)
+
+preinst:
+	@echo "#!/bin/sh" > $(PREINST)
+	@echo "mount | grep $(OPKGPART) >/dev/null 2>&1 && exit 0" >> $(PREINST)
+	@echo "echo \"Preparing $(OPKG) package installation...\"" >> $(PREINST)
+	@echo "echo" >> $(PREINST)
+	@echo "echo \"Mounting opkg info & status files partition...\"" >> $(PREINST)
+	@echo "rm -rf $(OPKG_INFO_STATUS_DIR)/" >> $(PREINST)
+	@echo "mkdir -m 0777 $(OPKG_INFO_STATUS_DIR)" >> $(PREINST)
+	@echo "for U in $(OPKG_INFO_STATUS_DIR) $(OPKGLANGPART); do umount \$$U >/dev/null 2>&1; done" >> $(PREINST)
+	@echo "mknod /dev/$(OPKGPART) c 90 40" >> $(PREINST)
+	@echo "flash_eraseall -j /dev/$(OPKGPART)" >> $(PREINST)
+	@echo "mount -n -t jffs2 $(OPKGPART) $(OPKG_INFO_STATUS_DIR)" >> $(PREINST)
+	@echo "[ \$$? -ne 0 ] && echo \"Problem has occurred: opkg partition not mounted.\" && exit 1" >> $(PREINST)
+	@echo "sync" >> $(PREINST)
+	@echo "exit 0" >> $(PREINST)
+
+postinst:
+	@echo "#!/bin/sh" > $(POSTINST)
+	@echo "cp -f $(USRETC)/$(OPKG_CONF_NAME) $(TMPETC)" >> $(POSTINST)
+	@echo "echo" >> $(POSTINST)
+	@echo "echo \"$(OPKG) configuration on: $(USRETC)/$(OPKG_CONF_NAME)\"" >> $(POSTINST)
+	@echo "echo" >> $(POSTINST)
+	@echo "echo \"Type: 'opkg update' to update packages list\"" >> $(POSTINST)
+	@echo "echo \"Type: 'opkg list' to see the list of the available packages\"" >> $(POSTINST)
+	@echo "echo \"Type: 'opkg list-installed' to see the list of the already installed packages\"" >> $(POSTINST)
+	@echo "echo \"Type: 'opkg install <packagename>' to install a package\"" >> $(POSTINST)
+	@echo "echo \"Type: 'opkg help' to see all the options\"" >> $(POSTINST)
+	@echo "echo" >> $(POSTINST)
+	@echo "echo \"Example: 'opkg install qos-sqm' to install qos-sqm scripts package\"" >> $(POSTINST)
+	@echo "exit 0" >> $(POSTINST)
+endif
+
