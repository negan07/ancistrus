--- work/bridge-utils-1.7.1/bridge-utils-1.7.1/brctl/brctl_cmd.c
+++ work/bridge-utils-1.7.1/bridge-utils-1.7.1/brctl/brctl_cmd.c
@@ -279,7 +279,63 @@ static int br_cmd_setportprio(int argc,
 
 	return err != 0;
 }
+// brcm begin
+static int br_cmd_setportsnooping(int argc, char *const* argv)
+{
+	int err;
+
+	err = br_set_port_snooping(argv[1], argv[2], argv[3]);
+	if (err)
+		fprintf(stderr, "set port snooping failed: %s\n",
+			strerror(errno));
+
+  printf("set port snooping failed: %d\n",err);
+
+	return err != 0;
+}
+
+static int br_cmd_clearportsnooping(int argc, char *const* argv)
+{
+	int err;
+
+	err = br_clear_port_snooping(argv[1], argv[2], argv[3]);
+	if (err)
+		fprintf(stderr, "clear port snooping failed: %s\n",
+			strerror(errno));
+  printf("clear snooping failed: %d\n",err);
+	return err != 0;
+}
+
+static int br_cmd_showportsnooping(int argc, char *const* argv)
+{
+	int err;
 
+	err = br_show_port_snooping(argv[1]);
+	if (err)
+		fprintf(stderr, "show port snooping failed: %s\n",
+			strerror(errno));
+
+	return err != 0;
+}
+
+static int br_cmd_enableportsnooping(int argc, char *const* argv)
+{
+	int err;
+	int enable;
+
+	if (sscanf(argv[1], "%i", &enable) != 1) {
+		fprintf(stderr, "bad value\n");
+		return 1;
+	}
+
+	err = br_enable_port_snooping(enable);
+	if (err)
+		fprintf(stderr, "enable port snooping failed: %s\n",
+			strerror(errno));
+
+	return err != 0;
+}
+// brcm end
 static int br_cmd_stp(int argc, char *const* argv)
 {
 	int stp, err;
@@ -471,6 +527,16 @@ static const struct command commands[] =
 	  "<bridge> <port> <cost>\tset path cost" },
 	{ 3, "setportprio", br_cmd_setportprio,
 	  "<bridge> <port> <prio>\tset port priority" },
+// brcm begin
+	{ 3, "setportsnooping", br_cmd_setportsnooping,
+	  "<bridge> <port> <addr>\tset port snooping" },
+	{ 3, "clearportsnooping", br_cmd_clearportsnooping,
+	  "<bridge> <port> <addr>\tclear port snooping" },
+	{ 1, "showportsnooping", br_cmd_showportsnooping,
+	  "<bridge>\tshow port snooping" },
+	{ 1, "enableportsnooping", br_cmd_enableportsnooping,
+	  "<enable>\t\tenable port snooping" },
+// brcm end
 	{ 0, "show", br_cmd_show,
 	  "[ <bridge> ]\t\tshow a list of bridges" },
 	{ 1, "showmacs", br_cmd_showmacs, 
--- work/bridge-utils-1.7.1/bridge-utils-1.7.1/libbridge/libbridge_devif.c
+++ work/bridge-utils-1.7.1/bridge-utils-1.7.1/libbridge/libbridge_devif.c
@@ -388,6 +388,74 @@ int br_set_port_priority(const char *bri
 	return port_set(bridge, port, "priority", priority, BRCTL_SET_PORT_PRIORITY);
 }
 
+// brcm begin
+#define BRCTL_SET_PORT_SNOOPING 21
+#define BRCTL_CLEAR_PORT_SNOOPING 22
+#define BRCTL_ENABLE_PORT_SNOOPING 23
+#define BRCTL_SHOW_PORT_SNOOPING 24
+
+int br_set_port_snooping(const char *br, const char *port, const char *addr)
+{
+	unsigned int iaddr[6];
+	unsigned char dest[6];
+	int i = 0;
+	
+	sscanf(addr, "%02x%02x%02x%02x%02x%02x", iaddr, iaddr+1, iaddr+2, iaddr+3, iaddr+4, iaddr+5);
+	for (i=0; i < 6; i++)
+	    dest[i] = iaddr[i];
+	sscanf(addr+13, "%02x%02x%02x%02x%02x%02x", iaddr, iaddr+1, iaddr+2, iaddr+3, iaddr+4, iaddr+5);
+	for (i=0; i < 6; i++)
+	    dest[i+6] = iaddr[i];
+	return port_set(br, port, "port_snooping", (unsigned long)dest, BRCTL_SET_PORT_SNOOPING);
+}
+
+int br_clear_port_snooping(const char *br, const char *port, const char *addr)
+{
+	unsigned int iaddr[6];
+	unsigned char dest[6];
+	int i = 0;
+	
+	sscanf(addr, "%02x%02x%02x%02x%02x%02x", iaddr, iaddr+1, iaddr+2, iaddr+3, iaddr+4, iaddr+5);
+	for (i=0; i < 6; i++)
+	    dest[i] = iaddr[i];
+	sscanf(addr+13, "%02x%02x%02x%02x%02x%02x", iaddr, iaddr+1, iaddr+2, iaddr+3, iaddr+4, iaddr+5);
+	for (i=0; i < 6; i++)
+	    dest[i+6] = iaddr[i];
+	return port_set(br, port, "port_snooping", (unsigned long)dest, BRCTL_CLEAR_PORT_SNOOPING);
+}
+
+int br_enable_port_snooping(int enable)
+{
+	int ret;
+
+	{
+		unsigned long arg[3] 
+			= { BRCTL_ENABLE_PORT_SNOOPING, 0, 0 };
+
+		arg[1] = enable;
+		ret = ioctl(br_socket_fd, SIOCSIFBR, arg);
+	} 
+
+	return ret < 0 ? errno : 0;
+}
+
+int br_show_port_snooping(const char *brname)
+{
+	int ret;
+
+	{
+		char _br[IFNAMSIZ];
+		unsigned long arg[3] 
+			= { BRCTL_SHOW_PORT_SNOOPING, (unsigned long) _br };
+
+		strncpy(_br, brname, IFNAMSIZ);
+		ret = ioctl(br_socket_fd, SIOCSIFBR, arg);
+	} 
+
+	return ret < 0 ? errno : 0;
+}
+// brcm end
+
 int br_set_path_cost(const char *bridge, const char *port, int cost)
 {
 	return port_set(bridge, port, "path_cost", cost, BRCTL_SET_PATH_COST);
--- work/bridge-utils-1.7.1/bridge-utils-1.7.1/libbridge/libbridge.h
+++ work/bridge-utils-1.7.1/bridge-utils-1.7.1/libbridge/libbridge.h
@@ -117,6 +117,14 @@ extern int br_set_stp_state(const char *
 extern int br_set_bridge_priority(const char *br, int bridge_priority);
 extern int br_set_port_priority(const char *br, const char *p, 
 				int port_priority);
+// brcm begin
+extern int br_set_port_snooping(const char *br, const char *p, 
+				const char *addr);
+extern int br_clear_port_snooping(const char *br, const char *p, 
+				const char *addr);
+extern int br_show_port_snooping(const char *br) ;
+extern int br_enable_port_snooping(int enable) ;
+// brcm end
 extern int br_set_path_cost(const char *br, const char *p, 
 			    int path_cost);
 extern int br_read_fdb(const char *br, struct fdb_entry *fdbs, 
