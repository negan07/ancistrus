diff -urN work/smartmontools-7.3/rc_smontools work/smartmontools-7.3/rc_smontools
--- work/smartmontools-7.3/rc_smontools	2017-11-03 21:54:56.000000000 +0100
+++ work/smartmontools-7.3/rc_smontools	2018-04-19 22:48:31.600116512 +0200
@@ -0,0 +1,156 @@
+#!/bin/sh
+#
+# ancistrus
+#
+# Netgear's D7000 (V1) Nighthawk Router Experience Distributed Project
+#
+# https://github.com/negan07/ancistrus
+#
+# License: GPLv2
+#
+#
+# Rc script for smartmontools daemon smartd.
+#
+# Usage: $0 < start restart startforced restartforced umount kumount stop mount remount kmount init reconfig info updatedb > (<debug>)
+#
+# <debug> runs smartd in foreground mode with pedantic debug messages.
+#
+
+locking() {
+	LOCKDIR=/var/lock/`basename $0`
+	MAXNUM=10
+	NUM=0
+
+	# Acquire lockdir to avoid race conditions
+	while [ "${NUM}" -lt "${MAXNUM}" ]
+	do
+	mkdir -p -m 0755 "${LOCKDIR}" >/dev/null 2>&1 && trap 'rm -rf "${LOCKDIR}"' INT TERM QUIT HUP EXIT && return 0
+	sleep 1
+	let NUM++
+	done
+
+	echo "$0: locking failed" && exit ${MAXNUM}
+}
+
+stop() {
+	# Kill all clients
+	for PID in `pidof ${DAEMON}`
+	do
+	set -- 10 5 30 5
+	for SIGNAL in 15 9 0 9; do [ -e /proc/${PID}/stat ] && while kill -$SIGNAL $PID >/dev/null 2>&1; do sleep $1; done; shift; done
+	done
+}
+
+start() {
+	# Checking if service is enabled
+	[ "`anc nvram drget smartd_enable 0`" = "1" ] || [ ! -z "$1" ] || return 1
+
+	# Checking for /dev/sdX storage presence
+	[ ! -z "`cat /proc/mounts | grep /dev/sd`" ] || return 2
+
+	# Checking if the service is already running
+	[ ! -z "`pidof ${DAEMON}`" ] && echo "$0: ${DAEMON} already running..." && return 3
+
+	# Starting daemon
+	$BIN
+
+	# Sanity check
+	BIN_RC=$?
+	[ $BIN_RC -ne 0 ] && echo "$0: Error ${BIN_RC} starting ${BIN}..." && return $BIN_RC
+}
+
+run_hd_idle() {
+	# Restart hd-idle daemon
+	killall -9 hd-idle >/dev/null 2>&1
+	TOUT=$(( `anc nvram drget hdidle_timeout 30` * 60 ))
+	[ "${TOUT}" -gt 0 >/dev/null 2>&1 ] && \
+	for D in `cat /proc/partitions | awk '{print $4}' | grep sd | grep -v sd.[0-9]`; do HDIDLEOPT="${HDIDLEOPT} -a $D -i ${TOUT}"; done
+	[ ! -z "${HDIDLEOPT}" ] && hd-idle${HDIDLEOPT}
+}
+
+updatedb() {
+	# Names
+	DB=drivedb.h
+	LOCDB=smart_${DB}
+	CTOUT=`anc nvram drget curl_conn_timeout 5`
+	TTOUT=`anc nvram drget curl_tr_timeout 30`
+	UPDURLS=\
+"https://www.smartmontools.org/export/HEAD/trunk/smartmontools \
+https://svn.code.sf.net/p/smartmontools/code/trunk/smartmontools \
+http://svn.code.sf.net/p/smartmontools/code/trunk/smartmontools \
+https://raw.githubusercontent.com/smartmontools/smartmontools/master/smartmontools"
+
+	cd /etc
+	[ -r ${CONFDIR}/${LOCDB} ] && cp -af ${CONFDIR}/${LOCDB} ${DB} >/dev/null 2>&1 && OLDTST=`date -r ${DB}`
+	for U in $UPDURLS
+	do
+	curl -f -s -k --connect-timeout ${CTOUT} -m ${TTOUT} -O -z ${DB} ${U}/${DB}
+	ERR=$?
+		if [ $ERR -eq 0 ]; then
+			if [ -r ${DB} -a "`sed -n '2p;3q;' ${DB}`" >/dev/null 2>&1 = " * drivedb.h - smartmontools drive database file" ]; then
+				if [ "`date -r ${DB}`" != "${OLDTST}" ]; then
+				${BINDIR}/smartctl -B ${DB} -P showall >/dev/null 2>&1
+				ERR=$?
+					if [ $ERR -eq 0 ]; then
+					cp -af ${DB} ${LOCDB}
+					mv -f ${DB} ${CONFDIR}/${LOCDB}
+					sync
+					stop
+					start
+					fi
+				fi
+			break
+			else
+			ERR=127
+			fi
+		fi
+	done
+	[ -r ${DB} ] && rm -f ${DB}
+	return $ERR
+}
+
+# Dirs
+CONFDIR=/usr/etc
+BINDIR=/usr/sbin
+
+# Debug purpose
+#CONFDIR=/tmp/etc/ancdbg
+#BINDIR=/tmp/etc/ancdbg
+
+# Names
+DAEMON=smartd
+BIN=${BINDIR}/${DAEMON}
+
+# Debug running
+[ "${2}" = "debug" ] && BIN="${BINDIR}/${DAEMON} -c ${BINDIR}/smartd.conf -n -d"
+
+locking
+case $1 in
+start|restart)
+stop
+start
+;;
+startforced|restartforced)
+stop
+start $1
+;;
+umount|kumount|stop)
+stop
+;;
+mount|remount|kmount|init|reconfig)
+run_hd_idle
+stop
+start
+;;
+info)
+;;
+updatedb)
+updatedb
+;;
+"")
+echo "Usage: $0 < start restart startforced restartforced umount kumount stop mount remount kmount init reconfig info updatedb > (<debug>)"
+;;
+*)
+stop
+;;
+esac
