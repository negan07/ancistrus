diff -urN work/mini-snmpd-1.6/rc_snmp work/mini-snmpd-1.6/rc_snmp
--- work/mini-snmpd-1.6/rc_snmp	1970-01-01 01:00:00.000000000 +0100
+++ work/mini-snmpd-1.6/rc_snmp	2018-01-05 12:00:11.000000000 +0100
@@ -0,0 +1,123 @@
+#!/bin/sh
+#
+# ancistrus
+#
+# Netgear's D7000 (V1) Nighthawk Router Experience Distributed Project
+#
+# https://github.com/negan07/ancistrus
+#
+# License: GPLv2
+#
+#
+# Rc script for mini-snmpd daemon.
+#
+# Usage: $0 < start restart startforced restartforced stop fwup remoteup fwdown remotedown > (<debug>)
+#
+# <debug> runs daemon in foreground mode with pedantic debug messages.
+#
+
+stop() {
+	# Kill all clients
+	for PID in `pidof ${DAEMON}`
+	do
+	[ -e /proc/${PID}/stat ] && while kill -9 $PID >/dev/null 2>&1; do :; done
+	done
+
+	# Stop remote service
+	remotedown
+}
+
+start() {
+	# Checking if service is enabled
+	[ "`anc nvram drget minisnmpd_enable 0`" = "1" ] || [ ! -z "$1" ] || return 1
+
+	# Checking if the service is already running
+	[ ! -z "`pidof ${DAEMON}`" ] && echo "$0: ${DAEMON} already running..." && return 2
+
+	# Nvram vars
+	VARS="minisnmpd_community minisnmpd_description minisnmpd_vendor minisnmpd_location minisnmpd_contact minisnmpd_timeout minisnmpd_auth wan_ifname minisnmpd_ip6 ip6_mode"
+
+	# Defaults
+	DEFS="public router .1.3.6.1.4.1 here mynum 1 1 atm0.1 0 disable"
+
+	# Vars Setup
+	set -- ${DEFS}
+		for VAR in $VARS
+		do
+		VAL=`anc nvram drget ${VAR} $1`
+		eval "${VAR}='${VAL}'"
+		shift
+		done
+
+	#The list of network interfaces (default is empty): '-i nnn, --interfaces=nnn'
+	minisnmpd_interfaces="eth0,eth1,eth2,eth3,eth4,ip6tnl0,${wan_ifname},ptm0,wl0,wl1"
+
+	#The list of disk mountpoints (default is empty): '-d nnn, --disks=nnn'
+	minisnmpd_disks="${ROOTSHDIR}"
+
+	#The ipv6 protocol support (default is disable): '-4/-6'
+	minisnmpd_ipprot="-4"
+	[ "${ip6_mode}" != "disable" ] && [ ${minisnmpd_ip6} = "1" ] && minisnmpd_ipprot="-6"
+
+	#The auth flag (default is 1)
+	[ "${minisnmpd_auth}" != "0" ] && minisnmpd_auth="-a" || minisnmpd_auth=""
+
+	# Starting daemon
+	$BIN -s -l info -c "${minisnmpd_community}" -D "${minisnmpd_description}" -V "${minisnmpd_vendor}" -L "${minisnmpd_location}" -C "${minisnmpd_contact}" -t "${minisnmpd_timeout}" -i "${minisnmpd_interfaces}" -d "${minisnmpd_disks}" "${minisnmpd_ipprot}" "${minisnmpd_auth}"
+
+	# Sanity check
+	BIN_RC=$?
+	[ $BIN_RC -ne 0 ] && echo "$0: Error $BIN_RC starting ${BIN}..." && return $BIN_RC
+
+	# Starting remote service
+	remoteup
+}
+
+remotedown() {
+	# Stopping remote service: use dummy remote old def port value as insurance
+	anc fw remote del ls MINISNMPD tcp/udp `anc nvram drget old_minisnmpd_rem_port 8161` 161
+}
+
+remoteup() {
+	REMPORT="`anc nvram rget minisnmpd_remote_port`"
+	# Act only on running daemon, remote service enabled, remote port set
+	[ -z "`pidof ${DAEMON}`" ] || [ "`anc nvram drget minisnmpd_remote_enable 0`" = "0" ] || [ -z "${REMPORT}" ] || anc fw remote add ls MINISNMPD tcp/udp ${REMPORT} 161
+}
+
+# Dirs
+BINDIR=/usr/sbin
+ROOTSHDIR=/mnt/shares
+
+# Debug purpose
+#BINDIR=/tmp/etc/ancdbg
+
+# Names
+DAEMON=mini-snmpd
+BIN=${BINDIR}/${DAEMON}
+
+# Debug running
+[ "${2}" = "debug" ] && BIN="${BINDIR}/${DAEMON} -l ${2} -n"
+
+case $1 in
+start|restart)
+stop
+start
+;;
+startforced|restartforced)
+stop
+start $1
+;;
+stop)
+stop
+;;
+fwup|remoteup)
+remotedown
+remoteup
+;;
+fwdown|remotedown)
+remotedown
+;;
+*)
+echo "Usage: $0 < start restart startforced restartforced stop fwup remoteup fwdown remotedown > (<debug>)"
+;;
+esac
